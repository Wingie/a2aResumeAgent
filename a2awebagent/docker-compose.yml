version: '3.8'

services:
  a2awebagent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: a2awebagent
    ports:
      - "7860:7860"
    depends_on:
      - postgres
      - redis
      - neo4j
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATABASE_URL=jdbc:postgresql://postgres:5432/a2awebagent
      - REDIS_URL=redis://redis:6379
      - NEO4J_URI=bolt://neo4j:7687
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/application_default_credentials.json
      - DB_USER=${DB_USER:-agent}
      - DB_PASSWORD=${DB_PASSWORD:-agent123}
      - JAVA_OPTS=-Xms512m -Xmx1g -DgeminiKey=${GEMINI_API_KEY}
      - ENABLE_XVFB=true
    volumes:
      - "./screenshots:/app/screenshots"
      - "./logs:/app/logs"
      - "./data/uploads:/app/uploads"
      - "./application_default_credentials.json:/app/credentials/application_default_credentials.json:ro"
    networks:
      - a2a-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: a2a-postgres
    environment:
      POSTGRES_DB: a2awebagent
      POSTGRES_USER: agent
      POSTGRES_PASSWORD: agent123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - "./data/postgres:/var/lib/postgresql/data"
      - "./init-scripts:/docker-entrypoint-initdb.d"
    ports:
      - "5432:5432"
    networks:
      - a2a-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agent -d a2awebagent"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: a2a-redis
    volumes:
      - "./data/redis:/data"
    ports:
      - "6379:6379"
    networks:
      - a2a-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  neo4j:
    image: neo4j:5-community
    container_name: a2a-neo4j
    environment:
      NEO4J_AUTH: neo4j/password123
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_dbms_memory_heap_initial__size: "512m"
      NEO4J_dbms_memory_heap_max__size: "1g"
    volumes:
      - "./data/neo4j:/data"
      - "./data/neo4j-logs:/logs"
      - "./data/neo4j-import:/var/lib/neo4j/import"
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    networks:
      - a2a-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password123", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # OpenSERP - Search Engine Results API
  openserp:
    image: karust/openserp:latest
    platform: linux/amd64
    container_name: serp
    ports:
      - "7001:7000"
    command: serve -a 0.0.0.0 -p 7000
    volumes:
      - ./config.yaml:/usr/src/app/config.yaml
    environment:
      OPENSERP_APP_HOST: "0.0.0.0"
      OPENSERP_APP_PORT: 7000
      OPENSERP_BAIDU_RATE_REQUESTS: 6   # Number of requests per Minute
      OPENSERP_BAIDU_RATE_BURST: 2      # Number of non-ratelimited requests per Minute
    networks:
      - a2a-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:7000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: PgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: a2a-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@a2awebagent.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - "./data/pgadmin:/var/lib/pgadmin"
    ports:
      - "8080:80"
    networks:
      - a2a-network
    depends_on:
      - postgres
    restart: unless-stopped
    profiles:
      - admin  # Only start with: docker-compose --profile admin up

networks:
  a2a-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  neo4j-data: